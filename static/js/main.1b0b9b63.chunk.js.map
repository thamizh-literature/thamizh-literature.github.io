{"version":3,"sources":["components/Footer.js","components/About.js","constants/index.js","helpers/index.js","service/Thirukural.js","service/Quiz.js","service/FindExplanationQuiz.js","service/FindKuralQuiz.js","components/QuizFilters.js","components/FindExplanationQuiz.js","components/FindKuralQuiz.js","components/CommonQuiz.js","components/Kurals.js","service/Samacheer.js","components/SamacheerKurals.js","components/SamacheerQuiz.js","components/Main.js","components/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["Footer","_jsx","className","children","Navbar","variant","bg","Container","About","Row","_jsxs","Col","rel","target","href","APP_NAME","KURALS","KURAL","FIND_EXPLANATION","FIND_KURAL","PAAL","ADHIKARAM","EXPLANATION","NEXT","SUBMIT","GENERAL","CLASS_SUFFIX","SAMACHEER_CLASS","SAMACHEER_EDUCATION","TERM","SEQUENTIAL_QUIZ_ORDER","QUIZ_ORDERS","FIND_EXPLANATION_QUIZ_TYPE","FIND_KURAL_QUIZ_TYPE","randomInteger","min","max","Math","floor","random","shuffleItems","array","map","value","sort","a","b","_ref","log","console","arguments","getAdhikarams","paal","getAdhikaramsAndKurals","item","no","aadhikaramNo","name","adhikaramName","thirukurals","filter","thirukural","getKurals","kuralNo","kurals","getRandomKuralFrom","adhikaramsAndKurals","randomAdhikaramIdx","length","randomKuralIdx","KURALS_PER_ADHIKARAM_COUNT","concat","getRandomKurals","kuralNoToSkip","paaltoUse","n","undefined","randomKurals","randomKural","foundIdx","findIndex","k","JSON","stringify","push","getKuralByKuralNumber","kural","some","find","getExplanationByAuthor","explanations","explanationAuthor","explanation","author","getAnswerKural","paals","adhikarams","getRandomKural","filteredThirukurals","includes","getAnswerKuralByKuralNumbers","kuralNumbers","randomKuralNo","getKuralByKuralNumbers","getExplanations","answerKural","incorrectExplanations","skipKuralNo","reduce","accumulator","getRandomExplanations","isCorrect","inCorrectKurals","QuizFilters","onApply","hasAdhikaramSelector","hasPaalSelector","hasTermSelector","hasQuizOrderSelector","selectedPaals","setSelectedPaals","useState","selectedAdhikarams","setSelectedAdhikarams","selectedTerms","setSelectedTerms","defaultExplanationAuthor","explanationAuthors","selectedExplanationAuthor","setSelectedExplanationAuthor","setAdhikarams","selectedQuizOrder","setSelectedQuizOrder","useEffect","allAdhikarams","Accordion","Item","eventKey","Header","Body","Form","onSubmit","e","terms","quizOrder","preventDefault","Group","Label","Typeahead","id","options","placeholder","selected","onChange","multiple","labelKey","option","Object","entries","_ref2","idx","key","Check","type","label","checked","toString","Button","onClick","handleClear","FindExplanationQuiz","heading","quiz","filterProps","onFilterChange","onNextQuiz","selectedExplanation","setSelectedExplanation","isCorrectAnswer","setIsCorrectAnswer","showResult","setShowResult","_Fragment","data","Card","Alert","show","correctExplanation","Badge","disabled","FindKuralQuiz","selectedKural","setSelectedKural","correctKural","CommonQuiz","setQuiz","filters","setFilters","quizType","useParams","quizTypeMapping","title","useTitle","adhikaram","handleFilterChange","handleNextQuiz","Kurals","selectedPaal","setSelectedPaal","selectedAdhikaram","setSelectedAdhikaram","setKurals","event","md","span","offset","values","Control","as","Tabs","defaultActiveKey","Tab","getKuralNumbers","classNo","termKuralNumbers","samacheerKurals","term","parseInt","flat","getAdhikaramNumbers","lastTerm","aadhikaramNos","kuralNumber","getAdhikaramsAndKuralsForAdhikaramNumber","SamacheerKurals","selectedClass","setSelectedClass","termKurals","setTermKurals","setDisabled","vaguppu","vaguppukkal","src","controls","SamacheerQuiz","usedKuralNumbers","setUsedKuralNumbers","showSummary","setShowSummary","samacheerClass","getAnswerKuralByKuralNumber","updatedUsedKuralNumbers","every","handleSummaryClose","Modal","onHide","backdrop","keyboard","closeButton","Title","Main","Switch","Route","exact","path","component","renderSamacheerClasses","route","NavDropdown","Array","TO_SAMACHEER_CLASS","fill","start","expand","fixed","Brand","Nav","Link","Toggle","Collapse","Divider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","BrowserRouter","Analytics","process","document","getElementById"],"mappings":"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","file":"static/js/main.1b0b9b63.chunk.js","sourcesContent":["import { Container, Navbar } from \"react-bootstrap\"\n\nconst Footer = () => {\n  return (\n    <footer className=\"fixed-bottom\">\n      <Navbar variant=\"light\" bg=\"light\">\n        <Container>\n        </Container>\n      </Navbar>\n    </footer>\n  )\n}\n\nexport default Footer","import { Col, Container, Row } from \"react-bootstrap\"\n\nconst About = () => {\n  return (\n    <Container>\n      <Row className=\"my-4\">\n        <Col>\n          <p>\n            திருக்குறள் கற்போம் வலைத்தளம் திருக்குறளை  பொருள் புரிந்து கற்றுக்கொள்ள உருவாக்கப்பட்டது. அனைவரும் (குறிப்பாக பள்ளிக்குழந்தைகள்) குறள்களை  பொருள் அறிந்து மனப்பாடம் செய்துகொள்ள வினாடி வினாக்கள் குறள்களின் விளக்கத்தின் அடிப்படையில் வடிவகைமைக்கப்பட்டுள்ளது. மேலும் தமிழ் நாடு சமச்சீர் கல்வி பாடத்திட்டத்தில் உள்ள குறள்களுக்கு வகுப்புவாரியாக வினாடி வினாக்கள் அமைக்கப்பட்டுள்ளது.\n          </p>\n          <p>\n            மூலம்: <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/thirukural-karpom/thirukural-karpom/\">https://github.com/thirukural-karpom/thirukural-karpom</a>\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default About\n","export const APP_NAME = \"திருக்குறள் கற்போம்\",\n  KURALS = \"குறள்கள்\",\n  KURAL = \"குறள்\",\n  QUIZ = \"வினாவிடை\",\n  FIND_EXPLANATION = \"விளக்கம் கண்டுபிடி\",\n  FIND_KURAL = \"குறள் கண்டுபிடி\",\n  PAAL = \"பால்\",\n  ADHIKARAM = \"அதிகாரம்\",\n  AUTHOR_COUNT = 3,\n  KURALS_PER_ADHIKARAM_COUNT = 10,\n  ADHIKARAM_COUNT = 133,\n  CORRECT_EXPLANATION_MESSAGE = \"சபாஷ்! சரியான விளக்கத்தை தேர்வு செய்துள்ளீர்கள்.\",\n  WRONG_EXPLANATION_MESSAGE = \"தவறான விளக்கத்தை தேர்வு செய்துள்ளீர்கள். மீண்டும் முயற்சிக்கவும்.\",\n  CORRECT_KURAL_MESSAGE = \"சபாஷ்! சரியான குறளை தேர்வு செய்துள்ளீர்கள்.\",\n  WRONG_KURAL_MESSAGE = \"தவறான குறளை தேர்வு செய்துள்ளீர்கள். மீண்டும் முயற்சிக்கவும்.\",\n  EXPLANATION = \"விளக்கம்\",\n  FILTERS = \"வடிப்பான்கள்\",\n  CLEAR = \"அழி\",\n  NEXT = \"அடுத்து\",\n  SUBMIT = \"சமர்ப்பி\",\n  GENERAL = \"பொது\",\n  CLASS_SUFFIX = \"ம் வகுப்பு\",\n  SAMACHEER_CLASS = \"வகுப்பு\",\n  FROM_SAMACHEER_CLASS = 10,\n  TO_SAMACHEER_CLASS = 10,\n  SAMACHEER_EDUCATION = \"சமச்சீர் கல்வி\",\n  TERM = \"பருவம்\",\n  QUIZ_ORDER = \"கேள்வி வரிசை\",\n  RANDOM_QUIZ_ORDER = \"random\",\n  SEQUENTIAL_QUIZ_ORDER = \"sequential\",\n  QUIZ_ORDERS = { [SEQUENTIAL_QUIZ_ORDER]: \"தொடர்ச்சியான வரிசை\", [RANDOM_QUIZ_ORDER]: \"சீரற்ற வரிசை\" },\n  SUMMARY_CLOSE = \"மீண்டும் தொடங்கு\",\n  SUMMARY_TITLE = \"முடிவு\",\n  SUMMARY_TEXT = \"சபாஷ்! அனைத்து கேள்விகளையும் முடித்துவிடீர்கள்.\",\n  FIND_EXPLANATION_QUIZ_TYPE = \"find-explanation\",\n  FIND_KURAL_QUIZ_TYPE = \"find-kural\",\n  ABOUT_WEBSITE = \"வலைத்தளம் பற்றி\"\n","\nconst randomInteger = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min\n\nconst shuffleItems = (array) => {\n  return array\n    .map((value) => ({ value, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(({ value }) => value)\n}\n\nconst log = (...args) => {\n  // if (process.env.NODE_ENV !== \"production\") {\n  if (1) {\n    console.log(...args)\n  }\n}\n\nexport { randomInteger, shuffleItems, log }\n","import thirukurals from \"../data/thirukurals.json\"\n\nconst getAdhikarams = (paal) => (\n  getAdhikaramsAndKurals(paal)\n    .map((item) => ({ no: item.aadhikaramNo, name: item.adhikaramName }))\n)\n\nconst getAllAdhikarams = () => (\n  thirukurals.map((item) => ({ no: item.aadhikaramNo, name: item.adhikaramName }))\n)\n\nconst getAdhikaramsAndKurals = (paal) => {\n  return thirukurals.filter((thirukural) => thirukural.paal === paal)\n}\n\nconst getKurals = (kuralNo) => thirukurals[kuralNo - 1].kurals\n\nconst getPaal = (kuralNo) => (\n  thirukurals\n    .find((thirukural) =>\n      thirukural.kurals\n        .find((kural) => kural.kuralNo === kuralNo))\n    .paal\n)\n\nexport { getAdhikarams, getKurals, getPaal, getAdhikaramsAndKurals, getAllAdhikarams }\n","import { KURALS_PER_ADHIKARAM_COUNT } from \"../constants\"\nimport thirukurals from \"../data/thirukurals.json\"\nimport { log, randomInteger } from \"../helpers\"\nimport { getAdhikaramsAndKurals } from \"./Thirukural\"\n\nconst getRandomKuralFrom = (adhikaramsAndKurals) => {\n  const randomAdhikaramIdx = randomInteger(0, adhikaramsAndKurals.length - 1)\n  const randomKuralIdx = randomInteger(0, KURALS_PER_ADHIKARAM_COUNT - 1)\n  log(`getting random kural, adhikaramIdx: ${randomAdhikaramIdx} kuralIdx: ${randomKuralIdx}`)\n  const { kurals, paal } = adhikaramsAndKurals[randomAdhikaramIdx]\n  const kural = kurals[randomKuralIdx]\n  return { ...kural, paal }\n}\n\nconst getRandomKurals = (kuralNoToSkip, paaltoUse, n = 3) => {\n  const adhikaramsAndKurals = getAdhikaramsAndKurals(paaltoUse)\n  const randomKurals = []\n  while (randomKurals.length < n) {\n    const randomKural = getRandomKuralFrom(adhikaramsAndKurals)\n    const foundIdx = randomKurals.findIndex((k) => k.kuralNo === randomKural.kuralNo)\n    log(`generating random kurals, randomKural: ${JSON.stringify(randomKural)}, foundIndex: ${foundIdx}`)\n    if (randomKural.kuralNo !== kuralNoToSkip.kuralNo && foundIdx === -1) {\n      log(`choosing random kural: ${JSON.stringify(randomKural)}`)\n      randomKurals.push(randomKural)\n    } else {\n      log(`skipping random kural: ${JSON.stringify(randomKural)}, foundIndex: ${foundIdx}`)\n    }\n  }\n  return randomKurals\n}\n\nconst getRandomExplanations = (paal, explanationAuthor, skipKuralNo, n = 3) => {\n  const randomKurals = getRandomKurals(skipKuralNo, paal, n)\n  log(`random kurals used for generating explanations: ${JSON.stringify(randomKurals)}`)\n  return randomKurals.reduce((accumulator, kural) => {\n    const explanation = getExplanationByAuthor(kural.explanations, explanationAuthor)\n    return accumulator.concat(explanation)\n  }, [])\n}\n\nconst getRandomKural = (paals, adhikarams) => {\n  let filteredThirukurals = thirukurals\n  if (paals.length) {\n    filteredThirukurals = filteredThirukurals.filter((thirukural) => paals.includes(thirukural.paal))\n  }\n  if (adhikarams.length) {\n    filteredThirukurals = filteredThirukurals.filter((thirukural) => adhikarams.includes(thirukural.adhikaramName))\n  }\n  return getRandomKuralFrom(filteredThirukurals)\n}\n\nconst getKuralByKuralNumber = (kuralNo) => {\n  let kural = {}\n  let paal = \"\"\n  thirukurals.some(item => {\n    kural = item.kurals.find(kural =>\n      kural.kuralNo === kuralNo\n    )\n    if (kural) {\n      paal = item.paal\n      return true\n    }\n    return false\n  })\n  return { ...kural, paal }\n}\n\nconst getKuralByKuralNumbers = (kuralNumbers) => {\n  const randomIdx = randomInteger(0, kuralNumbers.length - 1)\n  const randomKuralNo = kuralNumbers[randomIdx]\n  return getKuralByKuralNumber(randomKuralNo)\n}\n\nconst getExplanationByAuthor = (explanations, explanationAuthor) => (\n  explanations\n    .find((explanation) => explanation.author === explanationAuthor)\n    .explanation\n)\n\nconst getAnswerKural = (paals, adhikarams, explanationAuthor) => {\n  const { kuralNo, kural, paal, explanations } = getRandomKural(paals, adhikarams)\n  const explanation = getExplanationByAuthor(explanations, explanationAuthor)\n  return { kuralNo, kural, paal, explanation }\n}\n\nconst getAnswerKuralByKuralNumbers = (kuralNumbers, explanationAuthor) => {\n  const { kuralNo, kural, paal, explanations } = getKuralByKuralNumbers(kuralNumbers)\n  const explanation = getExplanationByAuthor(explanations, explanationAuthor)\n  return { kuralNo, kural, paal, explanation }\n}\n\nconst getAnswerKuralByKuralNumber = (kuralNumber, explanationAuthor) => {\n  const { kuralNo, kural, paal, explanations } = getKuralByKuralNumber(kuralNumber)\n  const explanation = getExplanationByAuthor(explanations, explanationAuthor)\n  return { kuralNo, kural, paal, explanation }\n}\n\nexport { getRandomKurals, getRandomExplanations, getAnswerKural, getAnswerKuralByKuralNumbers, getAnswerKuralByKuralNumber }\n","import { log, shuffleItems } from \"../helpers\"\nimport { getRandomExplanations } from \"./Quiz\"\n\nconst getExplanations = (answerKural, explanationAuthor) => {\n  const { kuralNo, paal, explanation } = answerKural\n  const incorrectExplanations = getRandomExplanations(paal, explanationAuthor, kuralNo)\n    .map((explanation) => ({ explanation, isCorrect: false }))\n  const correctExplanation = { explanation, isCorrect: true }\n  const explanations = shuffleItems([...incorrectExplanations, correctExplanation])\n  log(`shuffled explanations: ${JSON.stringify(explanations)}`)\n  return explanations\n}\n\nexport { getExplanations }\n","import { log, shuffleItems } from \"../helpers\"\nimport { getRandomKurals } from \"./Quiz\"\n\nconst getKurals = (answerKural) => {\n  const { kuralNo, kural, paal } = answerKural\n  const inCorrectKurals = getRandomKurals(kuralNo, paal)\n    .map(({ kural }) => ({ kural, isCorrect: false }))\n  const correctKural = { kural, isCorrect: true }\n  const kurals = shuffleItems([...inCorrectKurals, correctKural])\n  log(`shuffled kurals: ${JSON.stringify(kurals)}`)\n  return kurals\n}\n\nexport { getKurals }\n","import { useEffect, useState } from \"react\"\nimport { Accordion, Button, Col, Form, Row } from \"react-bootstrap\"\nimport { Typeahead } from \"react-bootstrap-typeahead\"\nimport { ADHIKARAM, CLEAR, EXPLANATION, FILTERS, PAAL, QUIZ_ORDER, QUIZ_ORDERS, SEQUENTIAL_QUIZ_ORDER, SUBMIT, TERM } from \"../constants\"\nimport explanationAuthors from \"../data/explanation-authors.json\"\nimport paals from \"../data/paals.json\"\nimport { log } from \"../helpers\"\nimport { getAdhikarams, getAllAdhikarams } from \"../service/Thirukural\"\n\nconst QuizFilters = ({ onApply, hasAdhikaramSelector = true, hasPaalSelector = true, hasTermSelector = false, hasQuizOrderSelector = false }) => {\n  const [selectedPaals, setSelectedPaals] = useState([])\n  const [selectedAdhikarams, setSelectedAdhikarams] = useState([])\n  const [selectedTerms, setSelectedTerms] = useState([])\n  const defaultExplanationAuthor = explanationAuthors[0]\n  const [selectedExplanationAuthor, setSelectedExplanationAuthor] = useState([defaultExplanationAuthor])\n  const [adhikarams, setAdhikarams] = useState(null)\n  const [selectedQuizOrder, setSelectedQuizOrder] = useState(null)\n\n  useEffect(() => {\n    log(\">>>>> side-effect - quiz filters: adhikarams\")\n    if (!adhikarams) {\n      const allAdhikarams = getAllAdhikarams()\n      setAdhikarams(allAdhikarams)\n    }\n    log(\"<<<<< side-effect - quiz filters: adhikarams\")\n  }, [adhikarams])\n\n  useEffect(() => {\n    log(\">>>>> side-effect - quiz filters: selectedQuizOrder\")\n    if (!selectedQuizOrder) {\n      setSelectedQuizOrder(SEQUENTIAL_QUIZ_ORDER)\n    }\n    log(\"<<<<< side-effect - quiz filters: selectedQuizOrder\")\n  }, [selectedQuizOrder])\n\n  const handleOnSubmit = (e) => {\n    log(\"handle filter form submit\")\n    onApply({\n      paals: selectedPaals,\n      adhikarams: selectedAdhikarams,\n      terms: selectedTerms,\n      explanationAuthor: selectedExplanationAuthor[0],\n      quizOrder: selectedQuizOrder\n    })\n    e.preventDefault()\n  }\n\n  const handleClear = () => {\n    log(\"handle clear filter\")\n    setSelectedPaals([])\n    setSelectedAdhikarams([])\n    setSelectedTerms([])\n    setSelectedExplanationAuthor([defaultExplanationAuthor])\n    setAdhikarams(null)\n    setSelectedQuizOrder(null)\n  }\n\n  const handlePaalChange = (paals) => {\n    log(`handle paal change in filter, paals: ${paals}`)\n    const adhikarams = paals.reduce((accumulator, paal) => accumulator.concat(...getAdhikarams(paal)), [])\n    log(`handle paal change in filter, adhikarams: ${JSON.stringify(adhikarams)}`)\n    setSelectedPaals(paals)\n    setAdhikarams(adhikarams.length ? adhikarams : null)\n    setSelectedAdhikarams([])\n  }\n\n  return (\n    <Row>\n      <Col>\n        <Accordion>\n          <Accordion.Item eventKey=\"0\">\n            <Accordion.Header>{FILTERS}</Accordion.Header>\n            <Accordion.Body>\n              <Form onSubmit={handleOnSubmit}>\n                {\n                  hasPaalSelector ?\n                    <Form.Group>\n                      <Form.Label>{PAAL}</Form.Label>\n                      <Typeahead\n                        id=\"paal-selector\"\n                        options={paals}\n                        placeholder={PAAL}\n                        selected={selectedPaals}\n                        onChange={handlePaalChange}\n                        multiple\n                      />\n                    </Form.Group>\n                    : \"\"\n                }\n                {\n                  hasAdhikaramSelector ?\n                    <Form.Group>\n                      <Form.Label>{ADHIKARAM}</Form.Label>\n                      <Typeahead\n                        id=\"adhikaram-selector\"\n                        labelKey={(option) => `${option.no} - ${option.name}`}\n                        options={adhikarams ? adhikarams : []}\n                        placeholder={ADHIKARAM}\n                        selected={selectedAdhikarams}\n                        onChange={setSelectedAdhikarams}\n                        multiple\n                      />\n                    </Form.Group>\n                    : \"\"\n                }\n                {\n                  hasQuizOrderSelector ?\n                    <Form.Group>\n                      <Form.Label>{QUIZ_ORDER}</Form.Label>\n                      {\n                        Object.entries(QUIZ_ORDERS).map(([key, value], idx) => (\n                          <Form.Check\n                            key={idx}\n                            id={`${key}-quiz-order`}\n                            type=\"radio\"\n                            label={value}\n                            name=\"quiz-order\"\n                            value={key}\n                            onChange={(e) => setSelectedQuizOrder(e.target.value)}\n                            checked={selectedQuizOrder === key}\n                          />\n                        ))\n                      }\n                    </Form.Group>\n                    : \"\"\n                }\n                {\n                  hasTermSelector ?\n                    <Form.Group>\n                      <Form.Label>{TERM}</Form.Label>\n                      <Typeahead\n                        id=\"term-selector\"\n                        labelKey={(option) => `${TERM} ${option}`}\n                        options={[1, 2, 3].map(option => option.toString())}\n                        placeholder={TERM}\n                        selected={selectedTerms}\n                        onChange={setSelectedTerms}\n                        multiple\n                      />\n                    </Form.Group>\n                    : \"\"\n                }\n                <Form.Group>\n                  <Form.Label>{EXPLANATION}</Form.Label>\n                  <Typeahead\n                    id=\"explanation-author-selector\"\n                    options={explanationAuthors}\n                    placeholder={EXPLANATION}\n                    selected={selectedExplanationAuthor}\n                    onChange={setSelectedExplanationAuthor}\n                  />\n                </Form.Group>\n                <Form.Group className=\"mt-3\">\n                  <Button\n                    type=\"submit\"\n                    className=\"mx-2\">\n                    {SUBMIT}\n                  </Button>\n                  <Button\n                    variant=\"danger\"\n                    type=\"button\"\n                    onClick={handleClear}\n                    className=\"mx-2\">\n                    <i className=\"bi bi-x\"></i> {CLEAR}\n                  </Button>\n                </Form.Group>\n              </Form>\n            </Accordion.Body>\n          </Accordion.Item>\n        </Accordion>\n      </Col>\n    </Row>\n  )\n}\n\nexport default QuizFilters","import { useState } from \"react\"\nimport { Alert, Badge, Button, Card, Col, Form, Row } from \"react-bootstrap\"\nimport { CORRECT_EXPLANATION_MESSAGE, KURAL, NEXT, SUBMIT, WRONG_EXPLANATION_MESSAGE } from \"../constants\"\nimport { log } from \"../helpers\"\nimport QuizFilters from \"./QuizFilters\"\n\nconst FindExplanationQuiz = ({ heading, quiz, filterProps, onFilterChange, onNextQuiz }) => {\n  const [selectedExplanation, setSelectedExplanation] = useState(null)\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState(false)\n  const [showResult, setShowResult] = useState(false)\n\n  const handleOnSubmit = (e) => {\n    const correctExplanation = quiz.explanations.find((item) => item.isCorrect).explanation\n    log(`handle form submit,\n      selectedExplanation: ${JSON.stringify(selectedExplanation)}\n      correctExplanation: ${JSON.stringify(correctExplanation)}`)\n    setIsCorrectAnswer(selectedExplanation === correctExplanation)\n    setShowResult(true)\n    e.preventDefault()\n  }\n\n  const handlNextQuiz = (e) => {\n    log(\"handle next quiz\")\n    setShowResult(false)\n    setIsCorrectAnswer(false)\n    setSelectedExplanation(null)\n    onNextQuiz()\n    e.preventDefault()\n  }\n\n  const handleApplyFilter = (data) => {\n    log(`handle apply filter callback, data: ${JSON.stringify(data)}`)\n    setShowResult(false)\n    setIsCorrectAnswer(false)\n    setSelectedExplanation(null)\n    onFilterChange(data)\n  }\n\n  const renderQuiz = () => (\n    <>\n      <Form.Group>\n        <Row className=\"fs-5\">\n          <Col>\n            <Badge bg=\"primary\">{`${KURAL} ${quiz.kuralNo}`}</Badge>\n          </Col>\n        </Row>\n        <Row className=\"my-3\">\n          <Col>\n            <Form.Label className=\"kural-text\">{quiz.kural}</Form.Label>\n          </Col>\n        </Row>\n      </Form.Group>\n      <Form.Group>\n        {\n          quiz.explanations.map((item, idx) => (\n            <Form.Check\n              key={idx}\n              id={`explanation-option-${idx}`}\n              value={item.explanation}\n              name=\"explanations\"\n              type=\"radio\"\n              label={item.explanation}\n              onChange={(e) => setSelectedExplanation(e.target.value)}\n              className=\"mx-3\"\n            />\n          ))\n        }\n      </Form.Group>\n    </>\n  )\n\n  return (\n    <>\n      <Row className=\"my-4\">\n        <Col>\n          <h2>{heading}</h2>\n        </Col>\n      </Row>\n      <QuizFilters {...filterProps} onApply={handleApplyFilter} />\n      <Row className=\"my-4\">\n        <Col>\n          <Card className=\"shadow-sm\">\n            <Card.Body>\n              <Alert variant=\"success\" show={showResult && isCorrectAnswer}>\n                {CORRECT_EXPLANATION_MESSAGE}\n              </Alert>\n              <Alert variant=\"danger\" show={showResult && !isCorrectAnswer}>\n                {WRONG_EXPLANATION_MESSAGE}\n              </Alert>\n              <Form onSubmit={handleOnSubmit}>\n\n                {quiz !== null ? renderQuiz() : \"Loading quiz...\"}\n\n                <Form.Group className=\"text-center mt-4\">\n                  <Button\n                    type=\"submit\"\n                    className=\"mx-2\"\n                    disabled={!selectedExplanation}\n                  >\n                    {SUBMIT}\n                  </Button>\n                  <Button\n                    variant=\"success\"\n                    type=\"button\"\n                    disabled={!isCorrectAnswer}\n                    onClick={handlNextQuiz}\n                    className=\"mx-2\">\n                    {NEXT} <i className=\"bi bi-arrow-right-short\"></i>\n                  </Button>\n                </Form.Group>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default FindExplanationQuiz","import { useState } from \"react\"\nimport { Alert, Badge, Button, Card, Col, Form, Row } from \"react-bootstrap\"\nimport { CORRECT_KURAL_MESSAGE, EXPLANATION, NEXT, SUBMIT, WRONG_KURAL_MESSAGE } from \"../constants\"\nimport { log } from \"../helpers\"\nimport QuizFilters from \"./QuizFilters\"\n\nconst FindKuralQuiz = ({ heading, quiz, filterProps, onFilterChange, onNextQuiz }) => {\n  const [selectedKural, setSelectedKural] = useState(null)\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState(false)\n  const [showResult, setShowResult] = useState(false)\n\n  const handleOnSubmit = (e) => {\n    const correctKural = quiz.kurals.find((item) => item.isCorrect).kural\n    log(`handle form submit,\n      selectedKural: ${JSON.stringify(selectedKural)}\n      correctKural: ${JSON.stringify(correctKural)}`)\n    setIsCorrectAnswer(selectedKural === correctKural)\n    setShowResult(true)\n    setSelectedKural(null)\n    e.preventDefault()\n  }\n\n  const handlNextQuiz = (e) => {\n    log(\"handle next quiz\")\n    setShowResult(false)\n    setIsCorrectAnswer(false)\n    setSelectedKural(null)\n    onNextQuiz()\n  }\n\n  const handleApplyFilter = (data) => {\n    log(`handle apply filter callback, data: ${JSON.stringify(data)}`)\n    setShowResult(false)\n    setIsCorrectAnswer(false)\n    setSelectedKural(null)\n    onFilterChange(data)\n  }\n\n  const renderQuiz = () => (\n    <>\n      <Form.Group>\n        <Row className=\"fs-5\">\n          <Col>\n            <Badge bg=\"primary\">{EXPLANATION}</Badge>\n          </Col>\n        </Row>\n        <Row className=\"my-3 fs-5\">\n          <Col>\n            <Form.Label>{quiz.explanation}</Form.Label>\n          </Col>\n        </Row>\n      </Form.Group>\n      <Form.Group>\n        {\n          quiz.kurals.map((item, idx) => (\n            <Form.Check\n              key={idx}\n              id={`kural-option-${idx}`}\n              value={item.kural}\n              name=\"kurals\"\n              type=\"radio\"\n              label={item.kural}\n              onChange={(e) => setSelectedKural(e.target.value)}\n              className=\"fs-6 mx-3 kural-text\"\n            />\n          ))\n        }\n      </Form.Group>\n    </>\n  )\n\n  return (\n    <>\n      <Row className=\"my-4\">\n        <Col>\n          <h2>{heading}</h2>\n        </Col>\n      </Row>\n      <QuizFilters {...filterProps} onApply={handleApplyFilter} />\n      <Row className=\"my-4\">\n        <Col>\n          <Card className=\"shadow-sm\">\n            <Card.Body>\n              <Alert variant=\"success\" show={showResult && isCorrectAnswer}>\n                {CORRECT_KURAL_MESSAGE}\n              </Alert>\n              <Alert variant=\"danger\" show={showResult && !isCorrectAnswer}>\n                {WRONG_KURAL_MESSAGE}\n              </Alert>\n              <Form onSubmit={handleOnSubmit}>\n\n                {quiz !== null ? renderQuiz() : \"Loading quiz...\"}\n\n                <Form.Group className=\"text-center mt-4\">\n                  <Button\n                    type=\"submit\"\n                    className=\"mx-2\"\n                    disabled={!selectedKural}\n                  >\n                    {SUBMIT}\n                  </Button>\n                  <Button\n                    variant=\"success\"\n                    type=\"button\"\n                    disabled={!isCorrectAnswer}\n                    onClick={handlNextQuiz}\n                    className=\"mx-2\">\n                    {NEXT} <i className=\"bi bi-arrow-right-short\"></i>\n                  </Button>\n                </Form.Group>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default FindKuralQuiz","import { useEffect, useState } from \"react\"\nimport { Col, Container, Row } from \"react-bootstrap\"\nimport { useParams } from \"react-router\"\nimport { useTitle } from \"react-use\"\nimport { APP_NAME, FIND_EXPLANATION, FIND_EXPLANATION_QUIZ_TYPE, FIND_KURAL, FIND_KURAL_QUIZ_TYPE } from \"../constants\"\nimport explanationAuthors from \"../data/explanation-authors.json\"\nimport { log } from \"../helpers\"\nimport { getExplanations } from \"../service/FindExplanationQuiz\"\nimport { getKurals } from \"../service/FindKuralQuiz\"\nimport { getAnswerKural } from \"../service/Quiz\"\nimport FindExplanationQuiz from \"./FindExplanationQuiz\"\nimport FindKuralQuiz from \"./FindKuralQuiz\"\n\nconst CommonQuiz = () => {\n  const [quiz, setQuiz] = useState(null)\n  const defaultExplanationAuthor = explanationAuthors[0]\n  const [filters, setFilters] = useState({\n    paals: [],\n    adhikarams: [],\n    explanationAuthor: defaultExplanationAuthor\n  })\n\n  const { quizType } = useParams()\n  const quizTypeMapping = {\n    [FIND_EXPLANATION_QUIZ_TYPE]: {\n      title: `${FIND_EXPLANATION} | ${APP_NAME}`,\n      heading: FIND_EXPLANATION\n    },\n    [FIND_KURAL_QUIZ_TYPE]: {\n      title: `${FIND_KURAL} | ${APP_NAME}`,\n      heading: FIND_KURAL\n    }\n  }\n\n  useTitle(quizTypeMapping[quizType].title)\n\n  useEffect(() => {\n    log(\">>>>> side-effect\")\n    if (!quiz) {\n      const { paals, adhikarams, explanationAuthor } = filters\n      const answerKural = getAnswerKural(paals, adhikarams.map(adhikaram => adhikaram.name), explanationAuthor)\n      log(`answer kural: ${answerKural}`)\n      const { kuralNo, kural, explanation } = answerKural\n\n      let quiz = {}\n      if (quizType === FIND_KURAL_QUIZ_TYPE) {\n        const kurals = getKurals(answerKural)\n        log(`kurals used for choices: ${kurals}`)\n        quiz = { explanation, kurals }\n      } else {\n        const explanations = getExplanations(answerKural, explanationAuthor)\n        log(`explanations used for choices: ${JSON.stringify(explanations)}`)\n        quiz = { kuralNo, kural, explanations }\n      }\n      log(`quiz: ${JSON.stringify(quiz)}`)\n      setQuiz(quiz)\n    }\n    log(\"<<<<< side-effect\")\n  }, [quiz, filters, quizType])\n\n  const handleFilterChange = (filters) => {\n    setFilters(filters)\n    setQuiz(null)\n  }\n\n  const handleNextQuiz = () => {\n    setQuiz(null)\n  }\n\n  return (\n    <Container>\n      {\n        quizType === FIND_KURAL_QUIZ_TYPE ?\n          <FindKuralQuiz\n            heading={quizTypeMapping[quizType].heading}\n            quiz={quiz}\n            onFilterChange={handleFilterChange}\n            onNextQuiz={handleNextQuiz}\n          />\n          :\n          <FindExplanationQuiz\n            heading={quizTypeMapping[quizType].heading}\n            quiz={quiz}\n            onFilterChange={handleFilterChange}\n            onNextQuiz={handleNextQuiz}\n          />\n      }\n      <Row className=\"mb-2\">\n        <Col>&nbsp;</Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default CommonQuiz","import React, { useEffect, useState } from \"react\"\nimport { Badge, Button, Card, Col, Container, Form, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { Typeahead } from \"react-bootstrap-typeahead\"\nimport { useTitle } from \"react-use\"\nimport { ADHIKARAM, APP_NAME, KURAL, KURALS, PAAL, SUBMIT } from \"../constants\"\nimport paals from \"../data/paals.json\"\nimport { log } from \"../helpers\"\nimport { getAdhikarams, getKurals } from \"../service/Thirukural\"\n\nconst Kurals = () => {\n  const [selectedPaal, setSelectedPaal] = useState(null);\n  const [adhikarams, setAdhikarams] = useState([]);\n  const [selectedAdhikaram, setSelectedAdhikaram] = useState(null)\n  const [kurals, setKurals] = useState([])\n\n  useTitle(`${KURALS} | ${APP_NAME}`)\n\n  useEffect(() => {\n    log(\">>>>> side-effect\")\n    if (!selectedPaal) {\n      const paal = paals[0]\n      const adhikarams = getAdhikarams(paal)\n      log(`adhikarams for ${paal}: ${adhikarams}`)\n      const adhikaram = adhikarams[0]\n      const kurals = getKurals(adhikaram.no)\n      log(`kurals for ${adhikaram.no}-${adhikaram.name}: ${JSON.stringify(kurals)}`)\n\n      setSelectedPaal([paal])\n      setAdhikarams(adhikarams)\n      setSelectedAdhikaram([adhikaram])\n      setKurals(kurals)\n    }\n    log(\"<<<<< side-effect\")\n  }, [selectedPaal])\n\n  const handleSubmit = (event) => {\n    log(\"handle form submit\")\n    const adhikaram = selectedAdhikaram[0]\n    log(`get kurals for adhikaram: ${adhikaram}`)\n    const kurals = getKurals(adhikaram.no)\n    log(`kurals: ${JSON.stringify(kurals)}`)\n    setKurals(kurals)\n    event.preventDefault()\n  }\n\n  const handlePaalChange = (values) => {\n    log(`handle paal change, values: ${values}`)\n    setSelectedPaal(values)\n    if (values.length) {\n      const [paal] = values\n      const adhikarams = getAdhikarams(paal)\n      log(`adhikarams for ${paal}: ${adhikarams}`)\n      setAdhikarams(adhikarams)\n      setSelectedAdhikaram([adhikarams[0]])\n    }\n  }\n\n  const renderKurals = () => (\n    kurals.map((k, idx) => (\n      <Row key={idx} className=\"my-3\">\n        <Col md={{ span: 8, offset: 2 }}>\n          <Card className=\"shadow-sm\">\n            <Card.Body>\n              <Row className=\"fs-5\">\n                <Col >\n                  <Badge bg=\"primary\">{`${KURAL} ${k.kuralNo}`}</Badge>\n                </Col>\n              </Row>\n              <Row className=\"my-3\">\n                <Col className=\"kural-text\">\n                  {k.kural}\n                </Col>\n              </Row>\n              <Tabs defaultActiveKey=\"0\" className=\"my-3\">\n                {k.explanations.map((e, idx) => (<Tab key={idx} eventKey={idx} title={e.author}>{e.explanation}</Tab>))}\n              </Tabs>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    ))\n  )\n\n  return (\n    <Container>\n      <Row className=\"my-3\">\n        <Col>\n          <Form onSubmit={handleSubmit}>\n            <Row>\n              <Col md={{ span: 4, offset: 1 }}>\n                <Form.Group>\n                  <Form.Label>{PAAL}</Form.Label>\n                  <Typeahead\n                    id=\"paal-selector\"\n                    onChange={handlePaalChange}\n                    options={paals}\n                    placeholder={PAAL}\n                    selected={selectedPaal !== null ? selectedPaal : []}\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={4}>\n                <Form.Group>\n                  <Form.Label>{ADHIKARAM}</Form.Label>\n                  <Typeahead\n                    id=\"adhikaram-selector\"\n                    onChange={setSelectedAdhikaram}\n                    labelKey={(option) => `${option.no} - ${option.name}`}\n                    options={adhikarams}\n                    placeholder={ADHIKARAM}\n                    selected={selectedAdhikaram !== null ? selectedAdhikaram : []}\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>&nbsp;</Form.Label>\n                  <Form.Control as={Button} type=\"submit\">\n                    {SUBMIT}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n\n      {renderKurals()}\n\n      <Row className=\"mb-2\">\n        <Col>&nbsp;</Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Kurals\n","import thirukurals from \"../data/thirukurals.json\"\nimport { FROM_SAMACHEER_CLASS, TO_SAMACHEER_CLASS } from \"../constants\"\nimport samacheerKurals from \"../data/samacheer-kurals.json\"\n\nconst getKuralNumbers = (classNo, terms = []) => {\n  const termKuralNumbers = samacheerKurals[classNo]\n  if (terms.length) {\n    terms = terms.map(term => parseInt(term))\n    return termKuralNumbers.reduce((accumulator, kuralNumbers, idx) =>\n      (terms.includes(idx + 1) ? accumulator.concat(...kuralNumbers) : accumulator), [])\n  }\n  return termKuralNumbers.flat()\n}\n\nconst getAdhikaramNumbers = (classNo, terms = []) => {\n  const termKuralNumbers = samacheerKurals[classNo]\n  const lastTerm = termKuralNumbers[termKuralNumbers.length-1]\n  if (lastTerm.length) {\n    const kuralsForAdhikaram = lastTerm.filter( (kuralNumber) => (kuralNumber % 10 === 0)) \n    const aadhikaramNos = kuralsForAdhikaram.map( (kuralNumber) => (kuralNumber/10))\n    return  getAdhikaramsAndKuralsForAdhikaramNumber(aadhikaramNos) .map((item) => ({ no: item.aadhikaramNo, name: item.adhikaramName }))\n    // return aadhikaramNos.map( (aadhikaramNo) => (getAdhikaramsAndKuralsForAdhikaramNumber(parseInt(aadhikaramNo)) .map((item) => ({ no: item.aadhikaramNo, name: item.adhikaramName }))))\n  }\n}\n\nconst getClassNumbers = () => {\n  return Array(TO_SAMACHEER_CLASS - FROM_SAMACHEER_CLASS + 1)\n    .fill(FROM_SAMACHEER_CLASS)\n    .map((start, idx) => start + idx)\n}\n\nconst getAdhikaramsAndKuralsForAdhikaramNumber = (aadhikaramNos) => {\n  return thirukurals.filter((thirukural) => aadhikaramNos.includes(thirukural.aadhikaramNo))\n}\n\nexport { getClassNumbers, getKuralNumbers, getAdhikaramNumbers }\n","import React, { useEffect, useState } from \"react\"\nimport { Badge, Button, Card, Col, Container, Form, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { Typeahead } from \"react-bootstrap-typeahead\"\nimport { useTitle } from \"react-use\"\nimport { ADHIKARAM, APP_NAME, KURAL, KURALS, SUBMIT, SAMACHEER_EDUCATION, SAMACHEER_CLASS } from \"../constants\"\nimport paals from \"../data/paals.json\"\nimport vaguppukkal from \"../data/samacheer-classes.json\"\nimport samacheerKurals from \"../data/samacheer-kurals.json\"\nimport { log } from \"../helpers\"\nimport { getAdhikarams, getKurals } from \"../service/Thirukural\"\nimport {getAdhikaramNumbers } from \"../service/Samacheer\"\n\nconst SamacheerKurals = () => {\n  // const [selectedPaal, setSelectedPaal] = useState(null);\n  const [selectedClass, setSelectedClass] = useState(null);\n  const [adhikarams, setAdhikarams] = useState([]);\n  const [selectedAdhikaram, setSelectedAdhikaram] = useState(null)\n  const [kurals, setKurals] = useState([])\n  const [termKurals, setTermKurals] = useState([])\n  const [disabled, setDisabled] = useState(true);\n\n  useTitle(`${KURALS} | ${APP_NAME}`)\n\n  useEffect(() => {\n    log(\">>>>> side-effect\")\n    if (!selectedClass) {\n      // const classes = getClassNumbers()\n      const vaguppu = vaguppukkal[0]\n      const termKurals = samacheerKurals[vaguppu]\n      const paal = paals[0]\n      const adhikarams = getAdhikaramNumbers(vaguppu)\n      log(`adhikarams for ${paal}: ${adhikarams}`)\n      const adhikaram = adhikarams[0]\n      const kurals = getKurals(adhikaram.no)\n      log(`kurals for ${adhikaram.no}-${adhikaram.name}: ${JSON.stringify(kurals)}`)\n\n      setSelectedClass([vaguppu])\n      setAdhikarams(adhikarams)\n      setSelectedAdhikaram([adhikaram])\n      setTermKurals(termKurals)\n      setKurals(kurals)\n    }\n    log(\"<<<<< side-effect\")\n  }, [selectedClass])\n\n  const handleSubmit = (event) => {\n    log(\"handle form submit\")\n    const adhikaram = selectedAdhikaram[0]\n    log(`get kurals for adhikaram: ${adhikaram}`)\n    const kurals = getKurals(adhikaram.no)\n    log(`kurals: ${JSON.stringify(kurals)}`)\n    setKurals(kurals)\n    event.preventDefault()\n  }\n\n  // const handlePaalChange = (values) => {\n  //   log(`handle paal change, values: ${values}`)\n  //   setSelectedPaal(values)\n  //   if (values.length) {\n  //     const [paal] = values\n  //     const adhikarams = getAdhikarams(paal)\n  //     log(`adhikarams for ${paal}: ${adhikarams}`)\n  //     setAdhikarams(adhikarams)\n  //     setSelectedAdhikaram([adhikarams[0]])\n  //   }\n  // }\n\n  const handleClassChange = (values) => {\n    log(`handle class change, values: ${values}`)\n    setSelectedClass(values)\n    if (values.length) {\n      const [vaguppu] = values\n      const adhikarams = getAdhikaramNumbers(vaguppu)\n      log(`adhikarams for ${vaguppu}: ${adhikarams}`)\n      setAdhikarams(adhikarams)\n      setSelectedAdhikaram([adhikarams[0]])\n    }\n  }\n\n  const clearAdhikaram = () => {\n    setSelectedAdhikaram([])\n  }\n\n  const renderKurals = () => (\n    kurals.map((k, idx) => (\n      <Row key={idx} className=\"my-3\">\n        <Col md={{ span: 8, offset: 2 }}>\n          <Card className=\"shadow-sm\">\n            <Card.Body>\n              <Row className=\"fs-5\">\n                <Col >\n                  <Badge bg=\"primary\">{`${KURAL} ${k.kuralNo}`}</Badge>\n                </Col>\n              </Row>\n              <Row className=\"my-3\">\n                <Col className={(termKurals[0].includes(k.kuralNo) || termKurals[1].includes(k.kuralNo)) ? \"kural-text kural-text-bold\" : \"kural-text\"}>\n                { k.kural }\n                </Col>\n              </Row>\n              <Row className=\"my-3\">\n                  <audio src={\"https://www.tamilvu.org/library/l2100/audio/\" + k.kuralNo + \".mp3\"} controls />\n              </Row>\n              <Tabs defaultActiveKey=\"0\" className=\"my-3\">\n                {k.explanations.map((e, idx) => (<Tab key={idx} eventKey={idx} title={e.author}>{e.explanation}</Tab>))}\n              </Tabs>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    ))\n  )\n\n  return (\n    <Container>\n      <Row className=\"my-3\">\n        <Col>\n          <Form onSubmit={handleSubmit}>\n            <Row>\n              <Col md={{ span: 4, offset: 1 }}>\n                <Form.Group>\n                  <Form.Label>{SAMACHEER_EDUCATION} {SAMACHEER_CLASS}</Form.Label>\n                  <Typeahead\n                    id=\"samacheer-education-selector\"\n                    onChange={handleClassChange}\n                    options={vaguppukkal}\n                    placeholder={SAMACHEER_CLASS}\n                    disabled={disabled}\n                    selected={selectedClass !== null ? selectedClass : []}\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={4}>\n                <Form.Group>\n                  <Form.Label>{ADHIKARAM}</Form.Label>\n                  <Typeahead\n                    id=\"adhikaram-selector\"\n                    onChange={setSelectedAdhikaram}\n                    labelKey={(option) => `${option.no} - ${option.name}`}\n                    options={adhikarams}\n                    placeholder={ADHIKARAM}\n                    selected={selectedAdhikaram !== null ? selectedAdhikaram : []}\n                  />\n                <input className=\"close-button\" type=\"reset\" value=\"x\"  onClick={() => clearAdhikaram()}/>\n                </Form.Group>\n              </Col>\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>&nbsp;</Form.Label>\n                  <Form.Control as={Button} type=\"submit\">\n                    {SUBMIT}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n\n      {renderKurals()}\n\n      <Row className=\"mb-2\">\n        <Col>&nbsp;</Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default SamacheerKurals\n","import { useEffect, useState } from \"react\"\nimport { Button, Col, Container, Modal, Row } from \"react-bootstrap\"\nimport { useParams } from \"react-router\"\nimport { useTitle } from \"react-use\"\nimport { APP_NAME, CLASS_SUFFIX, SUMMARY_CLOSE, FIND_EXPLANATION, FIND_EXPLANATION_QUIZ_TYPE, FIND_KURAL, FIND_KURAL_QUIZ_TYPE, SEQUENTIAL_QUIZ_ORDER, SUMMARY_TEXT, SUMMARY_TITLE } from \"../constants\"\nimport explanationAuthors from \"../data/explanation-authors.json\"\nimport { log } from \"../helpers\"\nimport { getExplanations } from \"../service/FindExplanationQuiz\"\nimport { getKurals } from \"../service/FindKuralQuiz\"\nimport { getAnswerKuralByKuralNumber, getAnswerKuralByKuralNumbers } from \"../service/Quiz\"\nimport { getKuralNumbers } from \"../service/Samacheer\"\nimport FindExplanationQuiz from \"./FindExplanationQuiz\"\nimport FindKuralQuiz from \"./FindKuralQuiz\"\n\nconst SamacheerQuiz = () => {\n  const [quiz, setQuiz] = useState(null)\n  const defaultExplanationAuthor = explanationAuthors[0]\n  const [filters, setFilters] = useState({\n    terms: [],\n    explanationAuthor: defaultExplanationAuthor,\n    quizOrder: SEQUENTIAL_QUIZ_ORDER\n  })\n  const [usedKuralNumbers, setUsedKuralNumbers] = useState([])\n  const [showSummary, setShowSummary] = useState(false);\n\n  const { quizType, classNo } = useParams()\n  const samacheerClass = `${classNo}-${CLASS_SUFFIX}`\n  const quizTypeMapping = {\n    [FIND_EXPLANATION_QUIZ_TYPE]: {\n      title: `${samacheerClass} | ${FIND_EXPLANATION} | ${APP_NAME}`,\n      heading: `${FIND_EXPLANATION} - ${samacheerClass}`\n    },\n    [FIND_KURAL_QUIZ_TYPE]: {\n      title: `${samacheerClass}  | ${FIND_KURAL} | ${APP_NAME}`,\n      heading: `${FIND_KURAL} - ${samacheerClass}`\n    }\n  }\n\n  useTitle(quizTypeMapping[quizType].title)\n\n  useEffect(() => {\n    log(\">>>>> side-effect\")\n    if (!quiz) {\n      const { terms, explanationAuthor, quizOrder } = filters\n      const kuralNumbers = getKuralNumbers(classNo, terms)\n        .filter(no => !usedKuralNumbers.includes(no))\n      log(`kural numbers for class:${classNo} and terms: ${terms} are ${kuralNumbers}`)\n      const answerKural = quizOrder === SEQUENTIAL_QUIZ_ORDER ?\n        getAnswerKuralByKuralNumber(kuralNumbers[0], explanationAuthor)\n        : getAnswerKuralByKuralNumbers(kuralNumbers, explanationAuthor)\n      log(`answer kural: ${answerKural}`)\n      const { kuralNo, kural, explanation } = answerKural\n\n      let quiz = {}\n      if (quizType === FIND_KURAL_QUIZ_TYPE) {\n        const kurals = getKurals(answerKural)\n        log(`kurals used for choices: ${kurals}`)\n        quiz = { explanation, kurals }\n      } else {\n        const explanations = getExplanations(answerKural, explanationAuthor)\n        log(`explanations used for choices: ${JSON.stringify(explanations)}`)\n        quiz = { kuralNo, kural, explanations }\n      }\n      log(`quiz: ${JSON.stringify(quiz)}`)\n      setQuiz(quiz)\n\n      const updatedUsedKuralNumbers = [...usedKuralNumbers, kuralNo]\n      log(`used kural numbers: ${updatedUsedKuralNumbers}`)\n      setUsedKuralNumbers(updatedUsedKuralNumbers)\n    }\n    log(\"<<<<< side-effect\")\n  }, [quiz, filters, classNo, usedKuralNumbers, quizType])\n\n  const handleFilterChange = (filters) => {\n    setFilters(filters)\n    setUsedKuralNumbers([])\n    setQuiz(null)\n  }\n\n  const handleNextQuiz = () => {\n    const { terms } = filters\n    const kuralNumbers = getKuralNumbers(classNo, terms)\n    const areAllKuralsUsed = usedKuralNumbers.length === kuralNumbers.length &&\n      kuralNumbers.every(no => usedKuralNumbers.includes(no))\n    if (areAllKuralsUsed) {\n      log(\"all kurals are used\")\n      setShowSummary(true)\n    } else {\n      setQuiz(null)\n    }\n  }\n\n  const handleSummaryClose = () => {\n    setShowSummary(false)\n    setUsedKuralNumbers([])\n    setQuiz(null)\n  }\n\n  return (\n    <Container>\n      <Modal\n        show={showSummary}\n        onHide={handleSummaryClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{SUMMARY_TITLE}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {SUMMARY_TEXT}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleSummaryClose}>\n            {SUMMARY_CLOSE}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {\n        quizType === FIND_KURAL_QUIZ_TYPE ?\n          <FindKuralQuiz\n            heading={quizTypeMapping[quizType].heading}\n            quiz={quiz}\n            onFilterChange={handleFilterChange}\n            onNextQuiz={handleNextQuiz}\n            filterProps={{\n              hasPaalSelector: false,\n              hasAdhikaramSelector: false,\n              hasTermSelector: true,\n              hasQuizOrderSelector: true\n            }}\n          />\n          :\n          <FindExplanationQuiz\n            heading={quizTypeMapping[quizType].heading}\n            quiz={quiz}\n            onFilterChange={handleFilterChange}\n            onNextQuiz={handleNextQuiz}\n            filterProps={{\n              hasPaalSelector: false,\n              hasAdhikaramSelector: false,\n              hasTermSelector: true,\n              hasQuizOrderSelector: true\n            }}\n          />\n      }\n\n      <Row className=\"mb-2\">\n        <Col>&nbsp;</Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default SamacheerQuiz","import React from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport About from \"./About\"\nimport CommonQuiz from \"./CommonQuiz\"\nimport Kurals from \"./Kurals\"\nimport SamacheerKurals from \"./SamacheerKurals\"\nimport SamacheerQuiz from \"./SamacheerQuiz\"\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path=\"/\" component={Kurals} /> \n      <Route exact path=\"/samacheer-kalvi\" component={SamacheerKurals} />\n      <Route exact path=\"/quiz/:quizType\" component={CommonQuiz} />\n      <Route exact path=\"/quiz/:quizType\" component={CommonQuiz} />\n      <Route exact path=\"/quiz/samacheer/:quizType/:classNo\" component={SamacheerQuiz} />\n      <Route exact path=\"/quiz/samacheer/:quizType/:classNo\" component={SamacheerQuiz} />\n      <Route exact path=\"/about\" component={About} />\n    </Switch>\n  </main>\n)\n\nexport default Main\n","import { React } from \"react\"\nimport Container from \"react-bootstrap/Container\"\nimport Nav from \"react-bootstrap/Nav\"\nimport Navbar from \"react-bootstrap/Navbar\"\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\nimport { ABOUT_WEBSITE, APP_NAME, CLASS_SUFFIX, FIND_EXPLANATION, FIND_KURAL, GENERAL, SAMACHEER_EDUCATION } from \"../constants\"\nimport { getClassNumbers } from \"../service/Samacheer\"\n\nconst Header = () => {\n\n  const renderSamacheerClasses = (route) => {\n    return (\n      <>\n        <NavDropdown.Header>{SAMACHEER_EDUCATION}</NavDropdown.Header>\n        {\n          getClassNumbers()\n            .map(classNo =>\n              <NavDropdown.Item\n                key={classNo}\n                href={`${route}/${classNo}`}>\n                {`${classNo}-${CLASS_SUFFIX}`}\n              </NavDropdown.Item>\n            )\n        }\n      </>\n    )\n  }\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n        <Container>\n          <Navbar.Brand href=\"/\">{APP_NAME}</Navbar.Brand>\n          <Nav className=\"me-auto\">\n            <Nav.Link href=\"/samacheer-kalvi\">\n               {SAMACHEER_EDUCATION}\n            </Nav.Link>\n          </Nav>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav>\n              <NavDropdown title={FIND_EXPLANATION}>\n                <NavDropdown.Item href=\"/quiz/find-explanation\">{GENERAL}</NavDropdown.Item>\n                <NavDropdown.Divider />\n                {renderSamacheerClasses(\"/quiz/samacheer/find-explanation\")}\n              </NavDropdown>\n            </Nav>\n            <Nav>\n              <NavDropdown title={FIND_KURAL}>\n                <NavDropdown.Item href=\"/quiz/find-kural\">{GENERAL}</NavDropdown.Item>\n                <NavDropdown.Divider />\n                {renderSamacheerClasses(\"/quiz/samacheer/find-kural\")}\n              </NavDropdown>\n            </Nav>\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"/about\">\n                {ABOUT_WEBSITE}\n              </Nav.Link>\n            </Nav>\n            {/* <Nav> */}\n            {/*   <Nav.Link */}\n            {/*     target=\"_blank\" */}\n            {/*     href=\"https://github.com/canabadyweb/thirukural-karpom\" */}\n            {/*     className=\"py-0\"> */}\n            {/*     <i className=\"bi bi-github fs-4\"></i> */}\n            {/*   </Nav.Link> */}\n            {/* </Nav> */}\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport Header from \"./Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport Analytics from \"react-router-ga\"\nimport App from \"./components/App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport \"./scss/index.scss\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <Analytics id={process.env.REACT_APP_GOOGLE_ANALYTICS_ID}>\n      <App />\n    </Analytics>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}